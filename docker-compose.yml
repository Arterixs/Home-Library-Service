version: '3.7'

services:
  app:
    container_name: app
    build:
      context: .
      target: dev
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./src:/app/src
    ports:
      - ${PORT}:${PORT}
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - my-network
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: pg.Dockerfile
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - logs:/var/lib/postgresql/data/pg_log
    ports:
      - ${POSTGRESS_HOST_PORT}:${POSTGRES_PORT}
    env_file:
      - .env
    command:
      [
        'postgres',
        '-c',
        'log_statement=all',
        '-c',
        'logging_collector=on',
        '-c',
        'log_directory=pg_log',
        '-c',
        'log_filename=postgresql.log',
      ]
    networks:
      - my-network
networks:
  my-network:
    driver: bridge
    name: my-network
volumes:
  pgdata:
  logs:
